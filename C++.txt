我提供一条线吧，针对C/C++，以及针对LINUX后端服务器开发和分布式系统开发这条线：
0. 斯坦福的《编程范式》课程，百度一下，很多资源
1. 《c++ primer》1个月刷完第一遍，做课后习题，答案看《C++ primer习题集》
2. 《Effective C++》1个月刷完第一遍
3. （可选）《CSAPP》的Tiny web 浏览器实验（这个其实更多是C，但是还是建议做一下，原因后面说）（1个月）
4.  跟MIT 6.824 2012年spring的分布式系统课程，做完它的lab，学习其代码。课程主页：https://pdos.csail.mit.edu/archive/6.824-2012/index.html （2个半月）
4a.(可选) 抛弃lab中助教提供的框架代码，自己实现一套完整的tiny distributed file system（2个月）
5. 陈硕大牛的《Linux多线程服务端编程 使用muduo C++网络库》，刷书+练习，认认真真的分析学习muduo网络库 （2个月）
6. 第3、第4、第5步中遇到的问题，去针对性看《C++ primer》和《Effective C++》中相对应的章节
7. 学习过程中好好利用GOOGLE、STACKOVERFLOW

好啦，到这里，大概C++理论算入门再往深一点点的水平，也有一定的C++的代码量啦，个人感觉刷刷题，找工作也没啥问题了。大概的时间列出来了，好好评估下吧。

说一句哈，真要走C++这条线的话，就别把自己局限到C++中啦，也把C给学啦，看看《APUE》、K&R的《C语言》，会非常有帮助的。
我自己走完4这一步啦，感觉很爽。主要是自信心提上来啦！以前总觉得自己编程菜鸡，遇到分布式那个作业时一度打退堂鼓，但是坚持下来，发现自己是有能力去完成这种看起来“无法完成”的任务的，现在遇到任何难题，真的再也不怕！就是干！

当然啊！！！如果现在时间不够的话，千万千万不要凿C++啦！！
